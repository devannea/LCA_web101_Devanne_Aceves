body {
    font-family: Georgia, serif;
}
header {
    grid-area: header;
    background-color: lightblue;
    text-align: center;
    font-size: 36px;
}
main {
    grid-area: main;
    background-color: pink;
}
.holder {
    margin-top: -35%;
    margin-bottom: -35%;
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100vh;
	width: 100vw;
}
#holder {
	width: 180px;
	padding: 8px 8px 8px 8px;
	background-color: lightgray;
	border-radius: 15px;
}
#display {
	display: block;
	height: 30px;
	width: 170px;
	padding: 8px 8px 8px 8px;
	border: 2px solid darkgray;
	background-color: white;
	font-size: 28px;
	color: black;
	text-align: right;
}
.button {
	display: inline-block;
	margin: 2px;
	width: 40px;
	height: 40px;
    font-size: 16px;
    border: 2px solid darkgray;
}
.mathButtons {
	margin: 2px 2px 2px 2px;
    color: black;
    background-color: lightgray;
}
.digits {
	color: black;
	background-color: lightgray;
}
#clearButton {
	color: black;
	background-color: lightgray;
}
nav {
    grid-area: nav;
    background-color: lightsalmon;
}
h4 {
    margin-left: 3%;
}
input {
    margin-left: 3%;
}
aside {
    grid-area: aside;
    background-color: lightgreen;
}
.calendar {
    grid-template-rows: 20% 20% 12% 12% 12% 12% 12%;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
}
.days-of-the-week {
    grid-row: 2/5;
    grid-column: 1;
}
.banner {
    grid-area: banner;
    background-color: lavender;
}
footer {
    grid-area: footer;
    background-color: khaki;
}
.container {
    display: grid; /* Using the grid */
    grid-template-areas: /* Notice how I've stacked my areas, just like they look on the page! */
      "header"
      "nav"
      "main"
      "aside"
      "banner"
      "footer";
}
@media (min-width: 500px) {
    .container {
      display: grid;
      grid-template-columns: 1fr 3fr; /* the first column is 1 unit (fraction), the second column is 3 units */
      grid-template-areas: /* stack the components how you want them to appear in the columns */
        "header  header" /* stretch header across both columns at the top */
        "nav     nav"
        "aside   main" /* stack these horizontally, aside first, etc */
        "banner  footer";
    }
    nav ul {
      display: flex;
      justify-content: space-between;
    }
}
@media (min-width: 700px) {
    .container {
      grid-template-columns: 1fr 4fr 1fr;
      grid-template-areas: 
        "header header  header"
        "nav    main    aside"
        "nav    main    banner"
        "footer footer  footer"
    }
     nav ul {
       flex-direction: column;
    }
}
